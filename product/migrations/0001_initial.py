# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2017-01-10 19:20
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import embed_video.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=250, unique=True, verbose_name='Name Category')),
                ('published', models.BooleanField(default='', verbose_name='Published')),
                ('published_in_menu', models.BooleanField(default='', verbose_name='Published in main menu')),
                ('published_in_second', models.BooleanField(default='', verbose_name='Published in second menu')),
                ('ordering', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ordering')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='product.Category', verbose_name='Parent class')),
            ],
            options={
                'ordering': ('tree_id', 'level'),
                'verbose_name_plural': 'Categories',
                'verbose_name': 'Category',
                'db_table': 'category',
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Creator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=250, verbose_name='Url')),
                ('name', models.CharField(blank=True, default='', max_length=200, unique=True, verbose_name='Creator device')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='product.Creator', verbose_name='Parent class')),
            ],
            options={
                'ordering': ('tree_id', 'level'),
                'verbose_name_plural': 'Creators',
                'verbose_name': 'Creator',
                'db_table': 'creators',
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='MenuItemProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('slug', models.CharField(blank=True, max_length=250, verbose_name='Url')),
                ('published', models.BooleanField(verbose_name='Published')),
                ('ordering', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ordering')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='product.Category', verbose_name='Category')),
            ],
            options={
                'ordering': ['ordering'],
                'verbose_name_plural': 'Menu Items for Products',
                'verbose_name': 'Menu Item',
                'db_table': 'menuItemsProducts',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_title', models.CharField(max_length=250, verbose_name='Product Title')),
                ('product_date', models.DateTimeField(verbose_name='Release date')),
                ('product_video', embed_video.fields.EmbedVideoField(blank=True, help_text='URL video', null=True, verbose_name='Video')),
                ('video_published', models.BooleanField(default='')),
                ('slug', models.CharField(blank=True, max_length=250, verbose_name='Url')),
                ('slogan', models.CharField(max_length=250, verbose_name='Product Slogan')),
                ('short_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Short text')),
                ('full_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Full text')),
                ('published', models.BooleanField(verbose_name='Published')),
                ('published_main', models.BooleanField(default='', verbose_name='Published on main page')),
                ('ordering', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ordering')),
                ('product_category', mptt.fields.TreeForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.Category', verbose_name='Categories')),
                ('product_creator', mptt.fields.TreeForeignKey(blank=True, default='', max_length=200, on_delete=django.db.models.deletion.CASCADE, related_name='creator', to='product.Creator', verbose_name='Creator')),
            ],
            options={
                'ordering': ['ordering'],
                'verbose_name_plural': 'Products',
                'verbose_name': 'Product',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Support Title')),
                ('video', embed_video.fields.EmbedVideoField(blank=True, help_text='URL video', null=True, verbose_name='Video')),
                ('video_published', models.BooleanField(default='')),
                ('slug', models.CharField(blank=True, max_length=250, verbose_name='Url')),
                ('slogan', models.CharField(max_length=250, verbose_name='Support Slogan')),
                ('short_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Short text')),
                ('full_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Full text')),
                ('published', models.BooleanField(verbose_name='Published')),
                ('ordering', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ordering')),
                ('category', mptt.fields.TreeForeignKey(blank=True, default='', on_delete=django.db.models.deletion.CASCADE, related_name='supports', to='product.Category', verbose_name='Categories')),
            ],
            options={
                'ordering': ['ordering'],
                'verbose_name_plural': 'Supports',
                'verbose_name': 'Support',
                'db_table': 'support',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=50, verbose_name='Tag Name')),
            ],
            options={
                'verbose_name_plural': 'tag',
                'verbose_name': 'tags',
                'db_table': 'tags',
            },
        ),
        migrations.AddField(
            model_name='support',
            name='tag',
            field=models.ManyToManyField(related_name='support_tags', related_query_name='support_tags', to='product.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_tag',
            field=models.ManyToManyField(related_name='tags', related_query_name='tags', to='product.Tag', verbose_name='Tags'),
        ),
    ]
